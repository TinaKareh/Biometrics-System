/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Fragments;

import DataModel.StatusType;
import futuristicbio.biometrics.CrudOperations;
import futuristicbio.biometrics.DBConnect;
import futuristicbio.biometrics.DataApplicants;
import futuristicbio.biometrics.EnrollmentDetails;
import futuristicbio.biometrics.User;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Futuristic Ltd
 */
public class FragmentApprovalDataUpdate extends javax.swing.JPanel {

    private ArrayList<EnrollmentDetails> listingApplicants;

    /**
     * Creates new form FragmentApprovalDataUpdate
     */
    public FragmentApprovalDataUpdate() {
        initComponents();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        tableSwing91.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tableSwing91.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        tableSwing91.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        tableSwing91.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        tableSwing91.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
        tableSwing91.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
        tableSwing91.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
        ((DefaultTableModel) tableSwing91.getModel()).setRowCount(0);
        init();
    }

    private void init() {

        listingApplicants = new ArrayList<>();
        listingApplicants = new CrudOperations().getAllApprovedUpdates();
        if (listingApplicants.size() > 0) {
            for (int i = 0; i < listingApplicants.size(); i++) {
                EnrollmentDetails details = listingApplicants.get(i);
                tableSwing91.addRow(new Object[]{details.getPoliceId(), details.getFirstName(), details.getSurname(), details.getPosition(),
                    details.getRank(), details.getCounty(), details.getState()});

            }
        } else {
            //should add empty table row
            System.out.println("No Applicant found");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roundCorner1 = new SwingClass.RoundCorner();
        jPanel2 = new javax.swing.JPanel();
        swingSearch1 = new SwingCustiom.SwingSearch();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSwing91 = new SwingCustiom.TableSwing20();

        jPanel2.setBackground(java.awt.Color.white);

        swingSearch1.setBackground(new java.awt.Color(240, 240, 240));
        swingSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                swingSearch1ActionPerformed(evt);
            }
        });
        swingSearch1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                swingSearch1KeyReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(11, 46, 70));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/print.png"))); // NOI18N
        jButton1.setText("Print");
        jButton1.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(swingSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(swingSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBackground(java.awt.Color.white);

        tableSwing91.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Police ID", "First Name", "Last Name", "Position Held", "Rank", "County", "State"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableSwing91.setSelectionBackground(new java.awt.Color(11, 46, 70));
        jScrollPane1.setViewportView(tableSwing91);

        javax.swing.GroupLayout roundCorner1Layout = new javax.swing.GroupLayout(roundCorner1);
        roundCorner1.setLayout(roundCorner1Layout);
        roundCorner1Layout.setHorizontalGroup(
            roundCorner1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        roundCorner1Layout.setVerticalGroup(
            roundCorner1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundCorner1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roundCorner1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(roundCorner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void swingSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_swingSearch1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_swingSearch1ActionPerformed

    private void swingSearch1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_swingSearch1KeyReleased
        try {
            // TODO add your handling code here:
            ((DefaultTableModel) tableSwing91.getModel()).setRowCount(0);
            searchPermits2();
        } catch (SQLException ex) {
            Logger.getLogger(FragmentApprovalDataUpdate.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_swingSearch1KeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private SwingClass.RoundCorner roundCorner1;
    private SwingCustiom.SwingSearch swingSearch1;
    private SwingCustiom.TableSwing20 tableSwing91;
    // End of variables declaration//GEN-END:variables

    private void searchPermits2() throws SQLException {
        Connection connection = null;
        PreparedStatement statement = null;
        ResultSet resultSet = null;
        connection = DBConnect.ConnecrDb();
        Statement stmt = connection.createStatement();
        try {

            if (swingSearch1.getText().equals("")) {
                String sql1 = "SELECT registration_number,first_name,middle_name,surname,rank,state,county,update_status "
                        + "FROM police_details WHERE update_status = 2";
                resultSet = stmt.executeQuery(sql1);
            } else {

                String sql = "SELECT registration_number,first_name,middle_name,surname,rank,state,county,update_status "
                        + "FROM police_details"
                        + " WHERE update_status= '" + 2 + "' AND registration_number LIKE '%" + swingSearch1.getText() + "%' OR date_birth LIKE '%" + swingSearch1.getText() + "%' OR first_name LIKE'%" + swingSearch1.getText() + "%' OR middle_name LIKE '%" + swingSearch1.getText() + "%' OR surname LIKE '%" + swingSearch1.getText() + "%'OR rank LIKE '%" + swingSearch1.getText() + "%'OR state LIKE '%" + swingSearch1.getText() + "%'";

                statement = connection.prepareStatement(sql);

                resultSet = statement.executeQuery();
            }
            if (resultSet == null) {
                System.err.println("null result set");
            }

            DefaultTableModel model = (DefaultTableModel) tableSwing91.getModel();
            model.setRowCount(0);
            while (resultSet.next()) {

                User reports = new User(resultSet.getString("registration_number"), resultSet.getString("first_name"),
                        resultSet.getString("middle_name"), resultSet.getString("surname"),
                        resultSet.getString("rank"), resultSet.getString("state"),
                        resultSet.getString("county"), resultSet.getString("update_status")
                );
                Object[] row = new Object[8];

                row[0] = reports.getpermitNo();
                row[1] = reports.getfirstName();
                row[2] = reports.getlastName();
                row[3] = reports.getoperator();
                row[4] = reports.getspeciality();
                row[5] = reports.getapplicant_id();
                row[6] = reports.getreaddate();
                //row[7] = reports.getbiocapture_status().equals("0")? StatusType.Capture: StatusType.Reset;

                model.addRow(row);
            }

            /* Integer rows = model.getRowCount();
                 String total = rows.toString();
                jTextFieldTotal.setText(total);*/
            if (model.getRowCount() < 1) {
                JOptionPane.showMessageDialog(null, "No Application found", "Error", JOptionPane.ERROR_MESSAGE, null);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            e.printStackTrace();

        } finally {
            try {

                if (resultSet != null) {
                    resultSet.close();
                }
                if (statement != null) {
                    statement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Fragments;

import futuristicbio.biometrics.AministratorDashboard;
import futuristicbio.biometrics.CheckBiometricDevice;
import futuristicbio.biometrics.DBConnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Futuristic Ltd
 */
public class FragmentEditDevice extends javax.swing.JPanel {

    
    private String device_type;
    private String device_name;
    private String serial_number;
    private String driver_location;
    private String sdk_location;
    private String device_status;
    private String date_created;
    private AministratorDashboard board;

    /**
     * Creates new form FragmentEditDevice
     */
    public FragmentEditDevice() {
        initComponents();
    }
    
    public FragmentEditDevice(String device_type,String device_name,String serial_number,String driver_location,String sdk_location,String device_status,String date_created,AministratorDashboard board) {
        this.board = board;
        this.device_type = device_type;
        this.device_name = device_name;
        this.serial_number = serial_number;
        this.driver_location=driver_location;
        this.sdk_location =sdk_location;
        this.device_status =device_status;
        this.date_created=date_created;
        initComponents();
                 
        deviceType.setText(device_type);
        deviceName.setText(device_name);
        deviceSerialNumber.setText(serial_number);
        deviceDriverLocation.setText(driver_location);
        deviceSdkLocation.setText(sdk_location);
        /*deviceStatus.setText(device_status);
        deviceCreatedAt.setText(date_created);*/
    }
    
    
    private void deactivateDevice(){
      Connection connection = null;
        PreparedStatement stmt = null;
        ResultSet resultSet = null;

        try {
            connection = DBConnect.ConnecrDb();

            String sql32 = "Update biometric_devices set device_status =? where serial_number=?"; //'"+serial_number+"'";
            stmt = connection.prepareStatement(sql32);
            stmt.setInt(1, 2);
            stmt.setString(2, serial_number);
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Device Deactivated!");
            board.setForm(new FragmentDeviceManagement(board));


        }catch (SQLException e) {
            System.err.println();
            e.printStackTrace();
        }
        finally {
            if (resultSet != null) {
                try {
                    resultSet.close();
                    stmt.close();
                } catch (SQLException ex) {
                    Logger.getLogger(CheckBiometricDevice.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException ex) {
                    Logger.getLogger(CheckBiometricDevice.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roundCorner1 = new SwingClass.RoundCorner();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        deviceDriverLocation = new javax.swing.JTextField();
        deviceSdkLocation = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        deviceType = new javax.swing.JTextField();
        deviceName = new javax.swing.JTextField();
        deviceSerialNumber = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButtonDeactivateDevice = new javax.swing.JButton();

        roundCorner1.setBackground(java.awt.Color.white);

        jPanel1.setBackground(java.awt.Color.white);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Driver Location");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("SDKs Location");

        deviceDriverLocation.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        deviceSdkLocation.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deviceDriverLocation)
                    .addComponent(deviceSdkLocation)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(0, 269, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(deviceDriverLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(deviceSdkLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(201, 201, 201))
        );

        jPanel2.setBackground(java.awt.Color.white);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Device Type");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Device Name");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Serial Number");

        deviceType.setEditable(false);
        deviceType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        deviceName.setEditable(false);
        deviceName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        deviceSerialNumber.setEditable(false);
        deviceSerialNumber.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deviceType, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                    .addComponent(deviceName)
                    .addComponent(deviceSerialNumber))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deviceType, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(deviceName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(deviceSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(174, 174, 174))
        );

        jButton2.setBackground(new java.awt.Color(0, 112, 54));
        jButton2.setText("Update");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButtonDeactivateDevice.setBackground(new java.awt.Color(255, 51, 0));
        jButtonDeactivateDevice.setText("Deactivate");
        jButtonDeactivateDevice.setToolTipText("");
        jButtonDeactivateDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeactivateDeviceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roundCorner1Layout = new javax.swing.GroupLayout(roundCorner1);
        roundCorner1.setLayout(roundCorner1Layout);
        roundCorner1Layout.setHorizontalGroup(
            roundCorner1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundCorner1Layout.createSequentialGroup()
                .addGroup(roundCorner1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundCorner1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(roundCorner1Layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(137, 137, 137)
                        .addComponent(jButtonDeactivateDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        roundCorner1Layout.setVerticalGroup(
            roundCorner1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundCorner1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(roundCorner1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addGroup(roundCorner1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDeactivateDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1020, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(roundCorner1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 572, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(roundCorner1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        editBiocaputureDevice();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonDeactivateDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeactivateDeviceActionPerformed
        // TODO add your handling code here:
        deactivateDevice();
    }//GEN-LAST:event_jButtonDeactivateDeviceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField deviceDriverLocation;
    private javax.swing.JTextField deviceName;
    private javax.swing.JTextField deviceSdkLocation;
    private javax.swing.JTextField deviceSerialNumber;
    private javax.swing.JTextField deviceType;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonDeactivateDevice;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private SwingClass.RoundCorner roundCorner1;
    // End of variables declaration//GEN-END:variables

  private void editBiocaputureDevice() {
        Connection conn = null;
        ResultSet rs = null;
        PreparedStatement preparedStmt = null;
       String mySdk = deviceSdkLocation.getText();
         String myDriverlocat = deviceDriverLocation.getText();
         String bimetricDeviceSerialNo=deviceSerialNumber.getText();
        
        if(mySdk.isEmpty()&&myDriverlocat.isEmpty()){
            JOptionPane.showMessageDialog(null, "Driver & SDK Location is Mandatory!!"); 
            
        }
        else{
        try {
            
            
            String query = " Update biometric_devices set"+" driver_location=?,sdk_location=?"

                    + " where serial_number=?";
            
            conn = DBConnect.ConnecrDb();
         
            preparedStmt = conn.prepareStatement(query);

            preparedStmt.setString(1, myDriverlocat);
            preparedStmt.setString(2, mySdk);
            preparedStmt.setString(3, bimetricDeviceSerialNo);
            
            preparedStmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Device Updated Successful!");
           board.setForm(new FragmentDeviceManagement(board));

            
        }catch (SQLException e) {
            System.err.println();
            e.printStackTrace();
        }
        finally {
                if (preparedStmt != null) {
                    try {
                        preparedStmt.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(FragmentEditDevice.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
                if (conn != null) {
                    try {
                        conn.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(FragmentEditDevice.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            
        }
    }
    }
}
